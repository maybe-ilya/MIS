//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.0
//     from Assets/Content/Input/UnityInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace mis.Core
{
    public partial class @UnityInputActions: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @UnityInputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""UnityInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""120111ad-5679-416a-a6f4-3f0ce3b56aa4"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""8d919b76-a6a3-479f-849d-52316b340d1c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""ae7a501e-991b-4356-9439-fc09b5c8e277"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""98a573fb-6ed8-4716-a30f-487b840d1e13"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""d568295b-3022-4011-a4fe-be423536495e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Equip Combat Shotgun"",
                    ""type"": ""Button"",
                    ""id"": ""d222c0d4-84e4-4e9d-8248-1d9558658e3d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Equip Super Shotgun"",
                    ""type"": ""Button"",
                    ""id"": ""c6b987af-165a-4730-a59e-762c9b5370ca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Equip Assault Rifle"",
                    ""type"": ""Button"",
                    ""id"": ""59629704-d0ef-47f5-b4d6-7b9bded2c3fb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Equip Plasma Gun"",
                    ""type"": ""Button"",
                    ""id"": ""7f44e752-5de5-4147-a2f0-f5db1957ad2a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Equip Chaingun"",
                    ""type"": ""Button"",
                    ""id"": ""b54bf8e6-27ef-4a65-9a25-049dbf1b2086"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Equip Gauss Cannon"",
                    ""type"": ""Button"",
                    ""id"": ""857fac30-8848-46a6-847a-1fafca4c5824"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Equip Rocket Launcher"",
                    ""type"": ""Button"",
                    ""id"": ""eaf735a2-7beb-4503-a4d1-bbc5aa33fd1a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Equip BFG"",
                    ""type"": ""Button"",
                    ""id"": ""a3de742a-b40a-4bde-b0cc-4bddd9bff06a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Equip Last Weapon"",
                    ""type"": ""Button"",
                    ""id"": ""08cd6e74-c65e-4a5e-807b-e86db9bbb4c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""cb1ea74b-e662-459b-bf3a-b484a9001bd8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Alt Fire"",
                    ""type"": ""Button"",
                    ""id"": ""15009e31-4576-454e-87f2-889b6ac292f0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""dcbeff9a-8de2-4f0b-a26a-7906c1de7f85"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c7dd29db-2bbb-401e-8b1c-5f46c86044cf"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d3570626-69b7-453c-ad0e-7e61f049266e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1c29b658-b17f-4bcb-9048-56da5c30e527"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4081ecc1-5d7e-4dec-8ccd-6127ed154c78"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""88c96ce9-b3f1-4701-8e65-5dba70688212"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertX=false)"",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a4f05822-05d1-42f8-aa75-a4d1b3e49e03"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""edf68ea1-8e9b-4298-8a78-29f885c7e158"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Equip Combat Shotgun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fba7c8b2-a1b9-456b-ada2-620f8daa8fd7"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Equip Super Shotgun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c65e6d8b-dccc-4ed5-9258-062061065746"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Equip Assault Rifle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7504bc9-5f30-496a-8165-a0fe5b0f0b4d"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Equip Plasma Gun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""778c28c2-694f-4931-ae88-233bceb387d3"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Equip Chaingun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""448feb16-13b4-4ce6-98b8-739e48e44b03"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Equip Gauss Cannon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2356205c-a8fc-4007-921f-b0c073ae7fb8"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Equip Rocket Launcher"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f78c97a7-e1ba-4d57-9121-0774aba4ff06"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Equip BFG"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eee48495-9085-46f9-8136-26e0cabc00e8"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Equip Last Weapon"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""494e502b-4f46-4ec5-9310-26abc8744677"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94564c74-f77a-44cc-b5df-b0d37a6c54af"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Alt Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c814878d-3e99-4245-b5cc-e2c32512cd57"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8df1fe34-99a7-449e-87f2-b5c7826a4769"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""7f695925-eddc-46ee-802b-0225cc1c9ac8"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f0ef420c-ae4a-44cf-a19e-5cfe3da06324"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cursor"",
                    ""type"": ""PassThrough"",
                    ""id"": ""33caf1a9-357e-4b03-965d-834e0434eac0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scroll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""316bbe46-6f6b-4af5-a578-ecd5a192069a"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""697d382c-c97a-40ef-98fd-2e24e8bcb97a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""433cea8a-4669-4399-837d-656f715d7908"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9ddde01b-4c3a-4164-8172-2f4c10b65033"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Unpause"",
                    ""type"": ""PassThrough"",
                    ""id"": ""356fa254-91d7-4297-b6fd-a7590b5478f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Arrow Keys"",
                    ""id"": ""f20281fd-8902-465c-be22-14ac7065b5df"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f7982af3-8d7d-4ac8-b6d8-631e2952b4b5"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""25aa7b0a-32d7-49ee-9f3a-6421c15653b2"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4e955893-c180-405b-9e6a-a575b4bc4656"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1d3640eb-39d7-421e-a9f3-6023f8626ab4"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""6cdd5e09-914f-4039-a291-037776b9ff1d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""313032c9-b79c-4e91-94d8-1df1f15807da"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""890abbd1-e680-40eb-872b-3d9af56e1fe7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a62513e0-0a9e-40bb-99c3-b087b4aaed85"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fec6947a-8c4e-4537-9a6a-f7e3ad21218c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c2d2fe83-33bd-44ca-ac85-7fb04f9466a7"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3860a87a-cf93-42cd-a992-85f9691736e8"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dda6f5ea-4fcb-4b28-92bc-3aa496343c03"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c98f906-15ce-4c67-ad18-f5909ad98797"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df17a663-0932-463a-91b8-01b50b13fd72"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0fda88b-59a0-41d8-8046-d5d7e1fef4d0"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Unpause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca90358b-281a-4f96-a531-15230237e87a"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Unpause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Player
            m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
            m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
            m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
            m_Player_Pause = m_Player.FindAction("Pause", throwIfNotFound: true);
            m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
            m_Player_EquipCombatShotgun = m_Player.FindAction("Equip Combat Shotgun", throwIfNotFound: true);
            m_Player_EquipSuperShotgun = m_Player.FindAction("Equip Super Shotgun", throwIfNotFound: true);
            m_Player_EquipAssaultRifle = m_Player.FindAction("Equip Assault Rifle", throwIfNotFound: true);
            m_Player_EquipPlasmaGun = m_Player.FindAction("Equip Plasma Gun", throwIfNotFound: true);
            m_Player_EquipChaingun = m_Player.FindAction("Equip Chaingun", throwIfNotFound: true);
            m_Player_EquipGaussCannon = m_Player.FindAction("Equip Gauss Cannon", throwIfNotFound: true);
            m_Player_EquipRocketLauncher = m_Player.FindAction("Equip Rocket Launcher", throwIfNotFound: true);
            m_Player_EquipBFG = m_Player.FindAction("Equip BFG", throwIfNotFound: true);
            m_Player_EquipLastWeapon = m_Player.FindAction("Equip Last Weapon", throwIfNotFound: true);
            m_Player_Fire = m_Player.FindAction("Fire", throwIfNotFound: true);
            m_Player_AltFire = m_Player.FindAction("Alt Fire", throwIfNotFound: true);
            // UI
            m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
            m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
            m_UI_Cursor = m_UI.FindAction("Cursor", throwIfNotFound: true);
            m_UI_Scroll = m_UI.FindAction("Scroll", throwIfNotFound: true);
            m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
            m_UI_Cancel = m_UI.FindAction("Cancel", throwIfNotFound: true);
            m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
            m_UI_Unpause = m_UI.FindAction("Unpause", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Player
        private readonly InputActionMap m_Player;
        private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
        private readonly InputAction m_Player_Move;
        private readonly InputAction m_Player_Look;
        private readonly InputAction m_Player_Pause;
        private readonly InputAction m_Player_Jump;
        private readonly InputAction m_Player_EquipCombatShotgun;
        private readonly InputAction m_Player_EquipSuperShotgun;
        private readonly InputAction m_Player_EquipAssaultRifle;
        private readonly InputAction m_Player_EquipPlasmaGun;
        private readonly InputAction m_Player_EquipChaingun;
        private readonly InputAction m_Player_EquipGaussCannon;
        private readonly InputAction m_Player_EquipRocketLauncher;
        private readonly InputAction m_Player_EquipBFG;
        private readonly InputAction m_Player_EquipLastWeapon;
        private readonly InputAction m_Player_Fire;
        private readonly InputAction m_Player_AltFire;
        public struct PlayerActions
        {
            private @UnityInputActions m_Wrapper;
            public PlayerActions(@UnityInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Player_Move;
            public InputAction @Look => m_Wrapper.m_Player_Look;
            public InputAction @Pause => m_Wrapper.m_Player_Pause;
            public InputAction @Jump => m_Wrapper.m_Player_Jump;
            public InputAction @EquipCombatShotgun => m_Wrapper.m_Player_EquipCombatShotgun;
            public InputAction @EquipSuperShotgun => m_Wrapper.m_Player_EquipSuperShotgun;
            public InputAction @EquipAssaultRifle => m_Wrapper.m_Player_EquipAssaultRifle;
            public InputAction @EquipPlasmaGun => m_Wrapper.m_Player_EquipPlasmaGun;
            public InputAction @EquipChaingun => m_Wrapper.m_Player_EquipChaingun;
            public InputAction @EquipGaussCannon => m_Wrapper.m_Player_EquipGaussCannon;
            public InputAction @EquipRocketLauncher => m_Wrapper.m_Player_EquipRocketLauncher;
            public InputAction @EquipBFG => m_Wrapper.m_Player_EquipBFG;
            public InputAction @EquipLastWeapon => m_Wrapper.m_Player_EquipLastWeapon;
            public InputAction @Fire => m_Wrapper.m_Player_Fire;
            public InputAction @AltFire => m_Wrapper.m_Player_AltFire;
            public InputActionMap Get() { return m_Wrapper.m_Player; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
            public void AddCallbacks(IPlayerActions instance)
            {
                if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @EquipCombatShotgun.started += instance.OnEquipCombatShotgun;
                @EquipCombatShotgun.performed += instance.OnEquipCombatShotgun;
                @EquipCombatShotgun.canceled += instance.OnEquipCombatShotgun;
                @EquipSuperShotgun.started += instance.OnEquipSuperShotgun;
                @EquipSuperShotgun.performed += instance.OnEquipSuperShotgun;
                @EquipSuperShotgun.canceled += instance.OnEquipSuperShotgun;
                @EquipAssaultRifle.started += instance.OnEquipAssaultRifle;
                @EquipAssaultRifle.performed += instance.OnEquipAssaultRifle;
                @EquipAssaultRifle.canceled += instance.OnEquipAssaultRifle;
                @EquipPlasmaGun.started += instance.OnEquipPlasmaGun;
                @EquipPlasmaGun.performed += instance.OnEquipPlasmaGun;
                @EquipPlasmaGun.canceled += instance.OnEquipPlasmaGun;
                @EquipChaingun.started += instance.OnEquipChaingun;
                @EquipChaingun.performed += instance.OnEquipChaingun;
                @EquipChaingun.canceled += instance.OnEquipChaingun;
                @EquipGaussCannon.started += instance.OnEquipGaussCannon;
                @EquipGaussCannon.performed += instance.OnEquipGaussCannon;
                @EquipGaussCannon.canceled += instance.OnEquipGaussCannon;
                @EquipRocketLauncher.started += instance.OnEquipRocketLauncher;
                @EquipRocketLauncher.performed += instance.OnEquipRocketLauncher;
                @EquipRocketLauncher.canceled += instance.OnEquipRocketLauncher;
                @EquipBFG.started += instance.OnEquipBFG;
                @EquipBFG.performed += instance.OnEquipBFG;
                @EquipBFG.canceled += instance.OnEquipBFG;
                @EquipLastWeapon.started += instance.OnEquipLastWeapon;
                @EquipLastWeapon.performed += instance.OnEquipLastWeapon;
                @EquipLastWeapon.canceled += instance.OnEquipLastWeapon;
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @AltFire.started += instance.OnAltFire;
                @AltFire.performed += instance.OnAltFire;
                @AltFire.canceled += instance.OnAltFire;
            }

            private void UnregisterCallbacks(IPlayerActions instance)
            {
                @Move.started -= instance.OnMove;
                @Move.performed -= instance.OnMove;
                @Move.canceled -= instance.OnMove;
                @Look.started -= instance.OnLook;
                @Look.performed -= instance.OnLook;
                @Look.canceled -= instance.OnLook;
                @Pause.started -= instance.OnPause;
                @Pause.performed -= instance.OnPause;
                @Pause.canceled -= instance.OnPause;
                @Jump.started -= instance.OnJump;
                @Jump.performed -= instance.OnJump;
                @Jump.canceled -= instance.OnJump;
                @EquipCombatShotgun.started -= instance.OnEquipCombatShotgun;
                @EquipCombatShotgun.performed -= instance.OnEquipCombatShotgun;
                @EquipCombatShotgun.canceled -= instance.OnEquipCombatShotgun;
                @EquipSuperShotgun.started -= instance.OnEquipSuperShotgun;
                @EquipSuperShotgun.performed -= instance.OnEquipSuperShotgun;
                @EquipSuperShotgun.canceled -= instance.OnEquipSuperShotgun;
                @EquipAssaultRifle.started -= instance.OnEquipAssaultRifle;
                @EquipAssaultRifle.performed -= instance.OnEquipAssaultRifle;
                @EquipAssaultRifle.canceled -= instance.OnEquipAssaultRifle;
                @EquipPlasmaGun.started -= instance.OnEquipPlasmaGun;
                @EquipPlasmaGun.performed -= instance.OnEquipPlasmaGun;
                @EquipPlasmaGun.canceled -= instance.OnEquipPlasmaGun;
                @EquipChaingun.started -= instance.OnEquipChaingun;
                @EquipChaingun.performed -= instance.OnEquipChaingun;
                @EquipChaingun.canceled -= instance.OnEquipChaingun;
                @EquipGaussCannon.started -= instance.OnEquipGaussCannon;
                @EquipGaussCannon.performed -= instance.OnEquipGaussCannon;
                @EquipGaussCannon.canceled -= instance.OnEquipGaussCannon;
                @EquipRocketLauncher.started -= instance.OnEquipRocketLauncher;
                @EquipRocketLauncher.performed -= instance.OnEquipRocketLauncher;
                @EquipRocketLauncher.canceled -= instance.OnEquipRocketLauncher;
                @EquipBFG.started -= instance.OnEquipBFG;
                @EquipBFG.performed -= instance.OnEquipBFG;
                @EquipBFG.canceled -= instance.OnEquipBFG;
                @EquipLastWeapon.started -= instance.OnEquipLastWeapon;
                @EquipLastWeapon.performed -= instance.OnEquipLastWeapon;
                @EquipLastWeapon.canceled -= instance.OnEquipLastWeapon;
                @Fire.started -= instance.OnFire;
                @Fire.performed -= instance.OnFire;
                @Fire.canceled -= instance.OnFire;
                @AltFire.started -= instance.OnAltFire;
                @AltFire.performed -= instance.OnAltFire;
                @AltFire.canceled -= instance.OnAltFire;
            }

            public void RemoveCallbacks(IPlayerActions instance)
            {
                if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPlayerActions instance)
            {
                foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public PlayerActions @Player => new PlayerActions(this);

        // UI
        private readonly InputActionMap m_UI;
        private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
        private readonly InputAction m_UI_Navigate;
        private readonly InputAction m_UI_Cursor;
        private readonly InputAction m_UI_Scroll;
        private readonly InputAction m_UI_Submit;
        private readonly InputAction m_UI_Cancel;
        private readonly InputAction m_UI_Click;
        private readonly InputAction m_UI_Unpause;
        public struct UIActions
        {
            private @UnityInputActions m_Wrapper;
            public UIActions(@UnityInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
            public InputAction @Cursor => m_Wrapper.m_UI_Cursor;
            public InputAction @Scroll => m_Wrapper.m_UI_Scroll;
            public InputAction @Submit => m_Wrapper.m_UI_Submit;
            public InputAction @Cancel => m_Wrapper.m_UI_Cancel;
            public InputAction @Click => m_Wrapper.m_UI_Click;
            public InputAction @Unpause => m_Wrapper.m_UI_Unpause;
            public InputActionMap Get() { return m_Wrapper.m_UI; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
            public void AddCallbacks(IUIActions instance)
            {
                if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Cursor.started += instance.OnCursor;
                @Cursor.performed += instance.OnCursor;
                @Cursor.canceled += instance.OnCursor;
                @Scroll.started += instance.OnScroll;
                @Scroll.performed += instance.OnScroll;
                @Scroll.canceled += instance.OnScroll;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @Unpause.started += instance.OnUnpause;
                @Unpause.performed += instance.OnUnpause;
                @Unpause.canceled += instance.OnUnpause;
            }

            private void UnregisterCallbacks(IUIActions instance)
            {
                @Navigate.started -= instance.OnNavigate;
                @Navigate.performed -= instance.OnNavigate;
                @Navigate.canceled -= instance.OnNavigate;
                @Cursor.started -= instance.OnCursor;
                @Cursor.performed -= instance.OnCursor;
                @Cursor.canceled -= instance.OnCursor;
                @Scroll.started -= instance.OnScroll;
                @Scroll.performed -= instance.OnScroll;
                @Scroll.canceled -= instance.OnScroll;
                @Submit.started -= instance.OnSubmit;
                @Submit.performed -= instance.OnSubmit;
                @Submit.canceled -= instance.OnSubmit;
                @Cancel.started -= instance.OnCancel;
                @Cancel.performed -= instance.OnCancel;
                @Cancel.canceled -= instance.OnCancel;
                @Click.started -= instance.OnClick;
                @Click.performed -= instance.OnClick;
                @Click.canceled -= instance.OnClick;
                @Unpause.started -= instance.OnUnpause;
                @Unpause.performed -= instance.OnUnpause;
                @Unpause.canceled -= instance.OnUnpause;
            }

            public void RemoveCallbacks(IUIActions instance)
            {
                if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IUIActions instance)
            {
                foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public UIActions @UI => new UIActions(this);
        private int m_KeyboardMouseSchemeIndex = -1;
        public InputControlScheme KeyboardMouseScheme
        {
            get
            {
                if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
                return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
            }
        }
        public interface IPlayerActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnLook(InputAction.CallbackContext context);
            void OnPause(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnEquipCombatShotgun(InputAction.CallbackContext context);
            void OnEquipSuperShotgun(InputAction.CallbackContext context);
            void OnEquipAssaultRifle(InputAction.CallbackContext context);
            void OnEquipPlasmaGun(InputAction.CallbackContext context);
            void OnEquipChaingun(InputAction.CallbackContext context);
            void OnEquipGaussCannon(InputAction.CallbackContext context);
            void OnEquipRocketLauncher(InputAction.CallbackContext context);
            void OnEquipBFG(InputAction.CallbackContext context);
            void OnEquipLastWeapon(InputAction.CallbackContext context);
            void OnFire(InputAction.CallbackContext context);
            void OnAltFire(InputAction.CallbackContext context);
        }
        public interface IUIActions
        {
            void OnNavigate(InputAction.CallbackContext context);
            void OnCursor(InputAction.CallbackContext context);
            void OnScroll(InputAction.CallbackContext context);
            void OnSubmit(InputAction.CallbackContext context);
            void OnCancel(InputAction.CallbackContext context);
            void OnClick(InputAction.CallbackContext context);
            void OnUnpause(InputAction.CallbackContext context);
        }
    }
}
